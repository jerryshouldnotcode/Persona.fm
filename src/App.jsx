// App.jsx ----------------------------------------------------
import React from 'react';
import { useState, useEffect } from 'react';
import SpotifyLogin from './spotifyAuth.jsx';   // component
import './App.css';

export default function App() {
  const [token,   setToken]   = useState('');
  const [loading, setLoading] = useState(true);

  // 1. look for ?code= after Spotify redirects back
  useEffect(() => {
    const params = new URLSearchParams(window.location.search);
    const code   = params.get('code');

    // no code ⇒ maybe we already have a token in localStorage
    if (!code) {
      const stored = localStorage.getItem('spotify_token');
      if (stored) setToken(stored);
      setLoading(false);
      return;
    }

    // 2. grab the verifier generated by <SpotifyLogin />
    const verifier = localStorage.getItem('sp_verifier');
    if (!verifier) {
      console.error('No PKCE verifier found.');
      setLoading(false);
      return;
    }

    // 3. exchange code → tokens
    fetch('/api/token', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ code, verifier })
    })
      .then(r => r.json())
      .then(({ access_token }) => {
        if (access_token) {
          setToken(access_token);
          localStorage.setItem('spotify_token', access_token);
          // strip ?code= from URL so refreshes are clean
          window.history.replaceState({}, '', window.location.pathname);
        }
      })
      .catch(console.error)
      .finally(() => setLoading(false));
  }, []);

  const handleLogout = () => {
    setToken('');
    localStorage.removeItem('spotify_token');
  };

  if (loading) return <p className="App-header">Loading…</p>;

  return (
    <div className="App">
      <header className="App-header">
        <h1>Spotify Profile</h1>

        {!token ? (
          <SpotifyLogin />   /* builds auth URL + redirects */
        ) : (
          <>
            <h2>Successfully logged in!</h2>
            <button onClick={handleLogout} className="logout-button">
              Logout
            </button>
          </>
        )}
      </header>
    </div>
  );
}
